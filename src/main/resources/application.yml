server:
  port: 8888
logging:
  config: classpath:logback.xml

application:
  name: router
registry:
  address: zookeeper://127.0.0.1:2181
spring:
  cache:
    ehcache:
      config: classpath:ehcache.xml
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        concurrency: 1 # 消费者数量
        max-concurrency: 2 # 启动消费者最大数量
        prefetch: 1 # 消费者每次从队列获取的消息数量
        #prefetch 使得每个Consumer在同一个时间点最多处理5个Message、换句话说,在接收到该Consumer的ack前,它不会将新的Message分发给它
        acknowledge-mode: NONE #消息接收确认 NONE：自动确认、AUTO：根据情况确认、MANUAL：手动确认
        retry:
          enabled: false #开始消费者重试
          max-attempts: 2 #最大重试次数
          initial-interval: 2000 #重试时间间隔
  redis:
    host: 127.0.0.1
    port: 6379
    database: 1 # Redis数据库索引（默认为0）
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 2000 # 连接超时时间（毫秒）
  http:
    encoding:
      charset: utf-8
  profiles:
    active: @activeProfile@
mybatis:
  mapper-locations: classpath*:com/example/testyc/persistence/sql/*.xml

